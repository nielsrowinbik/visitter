// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Booking {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  name      String   @default("Unnamed booking")
  startDate DateTime @map(name: "start_date") @db.Date
  endDate   DateTime @map(name: "end_date") @db.Date
  home      Home     @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId    String   @map(name: "home_id")

  @@map("bookings")
}

model Home {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  name      String
  owner     User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String    @map(name: "owner_id")
  bookings  Booking[]
  key       ShareKey?

  @@map("homes")
}

model Otp {
  id String @id @default(cuid())

  code     String  @unique
  active   Boolean @default(false)
  attempts Int     @default(0)

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map("otp")
}

model ShareKey {
  id     String @id @default(cuid())
  home   Home   @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId String @unique @map("home_id")

  @@map("keys")
}

model User {
  id                     String    @id @default(cuid())
  name                   String?
  email                  String    @unique
  emailVerified          DateTime? @map(name: "email_verified")
  image                  String?
  phone                  String?
  createdAt              DateTime  @default(now()) @map(name: "created_at")
  updatedAt              DateTime  @default(now()) @map(name: "updated_at")
  homes                  Home[]
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@map("users")
}
